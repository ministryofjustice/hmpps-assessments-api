{{- if .Values.dataExtractor.enabled -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-analytics-extractor
  labels:
    app: hmpps-assessments
    release: {{ .Release.Name }}
spec:
  schedule: "0 1 * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  # Check if we fail to create jobs within this 2 minute window and count as a missed schedule
  # The Cron controller will stop creating jobs after 100 consecutive missed schedules
  # https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#cron-job-limitations
  startingDeadlineSeconds: 120
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 3600
      backoffLimit: 3
      template:
        spec:
          restartPolicy: "Never"
          containers:
            - name: data-extractor-analytics
              image: ministryofjustice/data-engineering-data-extractor:sha-b84888b
              imagePullPolicy: Always
              args: ["extract_table_names.py && extract_pg_jsonl_snapshot.py && transfer_local_to_s3.sh"]
              env:
                - name: PGHOST
                  valueFrom:
                    secretKeyRef:
                      name: hmpps-assessments-rds-instance-output
                      key: rds_instance_address
                - name: PGDATABASE
                  valueFrom:
                    secretKeyRef:
                      name: hmpps-assessments-rds-instance-output
                      key: database_name
                - name: PGUSER
                  valueFrom:
                    secretKeyRef:
                      name: hmpps-assessments-rds-instance-output
                      key: database_username
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: hmpps-assessments-rds-instance-output
                      key: database_password
                - name: S3_DESTINATION
                  valueFrom:
                    secretKeyRef:
                      name: analytical-platform-reporting-s3-bucket
                      key: destination_bucket
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: analytical-platform-reporting-s3-bucket
                      key: access_key_id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: analytical-platform-reporting-s3-bucket
                      key: secret_access_key
                - name: AWS_DEFAULT_REGION
                  value: eu-west-2
                - name: SAVE_EVENTS_LOG
                  value: "true"
{{- end }}
